import java.util.Arrays;

public class Main2 {
//    int[]s={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997};
//
//    public static void main(String[] args) {
//        new Main2().run();
//    }
//
//    private void run() {
//        int t = 0;
//        for (int i = 2; i <= 10000; i++) {
//            if (kd(i)) {
//                //t = (t + 1)%9;
//                if (t==0)
//                System.out.println(i);
//            }
//        }
//    }
//
//    int[] primeDivisors(int n) {
//        return Arrays.stream(s).filter(x -> n % x == 0).toArray();
//    }
//
//    //к-во делителей 1 или 2
////    private boolean kd(int n) {
////        int[] d = primeDivisors(n);
////        if (d.length>2) return false;
////        if (d.length==1) {
////            int k = 0;
////            int nd = n;
////            while (nd % d[0] == 0) {
////                nd/=d[0]; k++;
////            }
////            int kd = k;
////            if (nd>1) {
////                return Arrays.stream(s).anyMatch(x -> x == kd + 1);
////            } else {
////                int[] divs = primeDivisors(kd + 1);
////                if (divs[])
////            }
////        }
////
////    }
//
//
}
